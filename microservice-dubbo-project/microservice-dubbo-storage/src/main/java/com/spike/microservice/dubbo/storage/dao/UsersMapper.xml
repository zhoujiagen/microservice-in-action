<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.spike.microservice.dubbo.storage.dao.UsersMapper">
	<resultMap id="BaseResultMap"
		type="com.spike.microservice.dubbo.domain.Users">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
	</resultMap>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from users
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.spike.microservice.dubbo.domain.Users">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into users (`name`, age)
		values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.spike.microservice.dubbo.domain.Users">
		update users
		set `name` = #{name,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, `name`, age
		from users
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, `name`, age
		from users
	</select>

	<select id="pagingCount" resultType="java.lang.Long">
		select count(id) from users
	</select>
	<select id="pagingData"
		parameterType="com.spike.microservice.dubbo.storage.support.Pageable"
		resultMap="BaseResultMap">
		select * from users limit #{limit}, #{offset}
	</select>

</mapper>